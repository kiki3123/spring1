plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

//buildscript {
//	repositories {
//		mavenLocal()
//		maven { url 'https://maven.aliyun.com/repository/google/' }
//		maven { url 'https://maven.aliyun.com/repository/public/' }
//		maven { url 'https://maven.aliyun.com/repository/spring/' }
//		maven { url 'https://maven.aliyun.com/repository/gradle-plugin/' }
//		maven { url 'https://maven.aliyun.com/repository/spring-plugin/' }
//		maven {
//			url "https://plugins.gradle.org/m2/"
//		}
//		mavenCentral()
//	}
//	dependencies {
//		classpath("org.springframework.boot:spring-boot-gradle-plugin:3.4.1")
//		classpath "io.spring.gradle:dependency-management-plugin:1.1.7"
//	}
//}

//plugins {
//	id 'java'
//}
//
//apply plugin: "org.springframework.boot"
//apply plugin: "io.spring.dependency-management"

group = 'hello'
version = '0.0.1-SNAPSHOT'

//lombok 설정 추가 시작
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
//lombok 설정 추가 끝


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	//web 라이브러리 추가
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//lombok 라이브러리 추가 시작
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	//lombok 라이브러리 추가 끝

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
